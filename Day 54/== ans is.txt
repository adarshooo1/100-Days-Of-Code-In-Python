== : compared the values of the object.


In Python, the == operator is used to compare the values of two variables, while the is operator is used to compare the identity of two variables.

The == operator compares the values of the two variables and returns True if they are equal, and False if they are not. For example:

>>> x = [1, 2, 3]
>>> y = [1, 2, 3]
>>> x == y
True


is: compares the exact location of object in memory.

The is operator, on the other hand, compares the memory addresses
of the two variables and returns True if they refer to the same object,
and False if they do not. For example


>>> x = [1, 2, 3]
>>> y = [1, 2, 3]
>>> x is y
False

In the above example, x and y are two different lists, even though they
have the same values, so the is operator returns False.

It's important to note that the is operator is generally faster than the == operator
because it doesn't have to compare the values of the variables. However, for basic
types such as integers, floats, and strings, the difference in performance is negligible.



